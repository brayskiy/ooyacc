#include "defs.h"
#include "output.h"
#include "reader.h"


const char Reader::line_format[] = 
"#line %d \"%s\"                                                             \n"
;


const char Reader::banner[] =
"#include <stdlib.h>                                                         \n"
"                                                                            \n"
"                                                                            \n"
"//#ifndef lint                                                              \n"
"//static char yysccsid[] = \"@(#)%s.cpp 1.6 06/08/2010\";                   \n"
"//#endif                                                                    \n"
"                                                                            \n"
"                                                                            \n"
"#define YYBYACC 1                                                           \n"
"#define YYMAJOR 1                                                           \n"
"#define YYMINOR 9                                                           \n"
"#define yyclearin    (yychar     = (-1))                                    \n"
"#define yyerrok      (yyerrflag  = 0)                                       \n"
"#define YYRECOVERING (yyerrflag! = 0)                                       \n"
;


const char Output::tables[] =
"extern short yylhs[];                                                       \n"
"extern short yylen[];                                                       \n"
"extern short yydefred[];                                                    \n"
"extern static const short yydgoto[];                                        \n"
"extern short yysindex[];                                                    \n"
"extern short yyrindex[];                                                    \n"
"extern short yygindex[];                                                    \n"
"extern short yytable[];                                                     \n"
"extern short yycheck[];                                                     \n"
"#if YYDEBUG                                                                 \n"
"extern char *yyname[];                                                      \n"
"extern char *yyrule[];                                                      \n"
"#endif                                                                      \n"
;


const char Output::header[] =
"// Header is empty now                                                      \n"
"                                                                            \n"
"#define yystacksize YYSTACKSIZE                                             \n"
;


const char Output::body[] =
"#define YYABORT goto yyabort                                                \n"
"#define YYREJECT goto yyabort                                               \n"
"#define YYACCEPT goto yyaccept                                              \n"
"#define YYERROR goto yyerrlab                                               \n"
"                                                                            \n"
"                                                                            \n"
"%s::%s(void* pExtraData)                                                    \n"
"{                                                                           \n"
"                                                                            \n"
"#if YYDEBUG                                                                 \n"
"                                                                            \n"
"    yydebug=1;                                                              \n"
"    if (yys = getenv(\"YYDEBUG\"))                                          \n"
"    {                                                                       \n"
"        yyn = *yys;                                                         \n"
"        if (yyn >= '0' && yyn <= '9')                                       \n"
"        {                                                                   \n"
"            yydebug = yyn - '0';                                            \n"
"        }                                                                   \n"
"    }                                                                       \n"
"                                                                            \n"
"#else                                                                       \n"
"                                                                            \n"
"  yydebug = 0;                                                              \n"
"                                                                            \n"
"#endif                                                                      \n"
"                                                                            \n"
"    yynerrs   = 0;                                                          \n"
"    yyerrflag = 0;                                                          \n"
"    yychar    = (-1);                                                       \n"
"                                                                            \n"
"    yyssp     = yyss;                                                       \n"
"    yyvsp     = yyvs;                                                       \n"
"    *yyssp    = yystate = 0;                                                \n"
"                                                                            \n"
"    ExtraInit(pExtraData);                                                  \n"
"}                                                                           \n"
"                                                                            \n"
"                                                                            \n"
"int %s::yyparse()                                                           \n"
"{                                                                           \n"
"                                                                            \n"
"yyloop:                                                                     \n"
"                                                                            \n"
"    if ((yyn = yydefred[yystate])) goto yyreduce;                           \n"
"    if (yychar < 0)                                                         \n"
"    {                                                                       \n"
"        if ((yychar = yylex()) < 0) yychar = 0;                             \n"
"                                                                            \n"
"#if YYDEBUG                                                                 \n"
"                                                                            \n"
"        if (yydebug)                                                        \n"
"        {                                                                   \n"
"            yys = 0;                                                        \n"
"            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];                 \n"
"            if (!yys) yys = \"illegal-symbol\";                             \n"
"            printf(\"\%%sdebug: state \%%d, reading \%%d (\%%s)\\n\",       \n"
"                    YYPREFIX, yystate, yychar, yys);                        \n"
"        }                                                                   \n"
"                                                                            \n"
"#endif                                                                      \n"
"                                                                            \n"
"    }                                                                       \n"
"                                                                            \n"
"    if ((yyn = yysindex[yystate]) &&                                        \n"
"       ((yyn += yychar) >= 0) &&                                            \n"
"       (yyn <= YYTABLESIZE) &&                                              \n"
"       (yycheck[yyn] == yychar))                                            \n"
"    {                                                                       \n"
"                                                                            \n"
"#if YYDEBUG                                                                 \n"
"                                                                            \n"
"        if (yydebug)                                                        \n"
"          {                                                                 \n"
"            printf(\"\%%sdebug: state \%%d, shifting to state \%%d\\n\",    \n"
"                    YYPREFIX, yystate, yytable[yyn]);                       \n"
"          }                                                                 \n"
"                                                                            \n"
"#endif                                                                      \n"
"                                                                            \n"
"        if (yyssp >= yyss + yystacksize - 1)                                \n"
"        {                                                                   \n"
"            goto yyoverflow;                                                \n"
"        }                                                                   \n"
"                                                                            \n"
"        *++yyssp = yystate = yytable[yyn];                                  \n"
"        *++yyvsp = yylval;                                                  \n"
"        yychar = (-1);                                                      \n"
"        if (yyerrflag > 0)  --yyerrflag;                                    \n"
"        goto yyloop;                                                        \n"
"    }                                                                       \n"
"    if ((yyn = yyrindex[yystate]) && (yyn += yychar) >= 0 &&                \n"
"            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)                   \n"
"    {                                                                       \n"
"        yyn = yytable[yyn];                                                 \n"
"        goto yyreduce;                                                      \n"
"    }                                                                       \n"
"    if (yyerrflag) goto yyinrecovery;                                       \n"
"                                                                            \n"
"#ifdef lint                                                                 \n"
"    goto yynewerror;                                                        \n"
"                                                                            \n"
"yynewerror:                                                                 \n"
"#endif                                                                      \n"
"                                                                            \n"
"    yyerror(\"syntax error\");                                              \n"
"                                                                            \n"
"#ifdef lint                                                                 \n"
"    goto yyerrlab;                                                          \n"
"                                                                            \n"
"yyerrlab:                                                                   \n"
"#endif                                                                      \n"
"                                                                            \n"
"    ++yynerrs;                                                              \n"
"                                                                            \n"
"yyinrecovery:                                                               \n"
"                                                                            \n"
"    if (yyerrflag < 3)                                                      \n"
"    {                                                                       \n"
"        yyerrflag = 3;                                                      \n"
"        for (;;)                                                            \n"
"        {                                                                   \n"
"            if ((yyn = yysindex[*yyssp]) && (yyn += YYERRCODE) >= 0 &&      \n"
"                 yyn <= YYTABLESIZE && yycheck[yyn] == YYERRCODE)           \n"
"            {                                                               \n"
"#if YYDEBUG                                                                 \n"
"                if (yydebug)                                                \n"
"                {                                                           \n"
"                    printf(\"\%%sdebug: state \%%d, error recovery        \\\n"
"                           shifting to state \%%d\\n\",                     \n"
"                           YYPREFIX,*yyssp, yytable[yyn]);                  \n"
"                }                                                           \n"
"#endif                                                                      \n"
"                if (yyssp >= yyss + yystacksize - 1)                        \n"
"                {                                                           \n"
"                    goto yyoverflow;                                        \n"
"                }                                                           \n"
"                *++yyssp = yystate = yytable[yyn];                          \n"
"                *++yyvsp = yylval;                                          \n"
"                goto yyloop;                                                \n"
"            }                                                               \n"
"            else                                                            \n"
"            {                                                               \n"
"                                                                            \n"
"#if YYDEBUG                                                                 \n"
"                                                                            \n"
"                if (yydebug)                                                \n"
"                {                                                           \n"
"                    printf(\"\%%sdebug: error recovery discarding         \\\n"
"                             state \%%d\\n\",                               \n"
"                            YYPREFIX, *yyssp);                              \n"
"                }                                                           \n"
"                                                                            \n"
"#endif                                                                      \n"
"                if (yyssp <= yyss) goto yyabort;                            \n"
"                --yyssp;                                                    \n"
"                --yyvsp;                                                    \n"
"            }                                                               \n"
"        }                                                                   \n"
"    }                                                                       \n"
"    else                                                                    \n"
"    {                                                                       \n"
"        if (yychar == 0) goto yyabort;                                      \n"
"                                                                            \n"
"#if YYDEBUG                                                                 \n"
"                                                                            \n"
"        if (yydebug)                                                        \n"
"        {                                                                   \n"
"            yys = 0;                                                        \n"
"            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];                 \n"
"            if (!yys) yys = \"illegal-symbol\";                             \n"
"            printf(\"\%%sdebug: state \%%d, error recovery discards token \\\n"
"                   \%%d(\%%s)\\n\",                                         \n"
"                    YYPREFIX, yystate, yychar, yys);                        \n"
"        }                                                                   \n"
"                                                                            \n"
"#endif                                                                      \n"
"                                                                            \n"
"        yychar = (-1);                                                      \n"
"        goto yyloop;                                                        \n"
"    }                                                                       \n"
"                                                                            \n"
"yyreduce:                                                                   \n"
"                                                                            \n"
"#if YYDEBUG                                                                 \n"
"                                                                            \n"
"    if (yydebug)                                                            \n"
"    {                                                                       \n"
"        printf(\"\%%sdebug: state \%%d, reducing by rule \%%d (\%%s)\\n\",  \n"
"                YYPREFIX, yystate, yyn, yyrule[yyn]);                       \n"
"    }                                                                       \n"
"                                                                            \n"
"#endif                                                                      \n"
"                                                                            \n"
"    yym = yylen[yyn];                                                       \n"
"    yyval = yyvsp[1-yym];                                                   \n"
"                                                                            \n"
"    switch (yyn)                                                            \n"
"    {                                                                       \n"
;


const char Output::trailer[] =
"    }                                                                       \n"
"                                                                            \n"
"    yyssp -= yym;                                                           \n"
"    yystate = *yyssp;                                                       \n"
"    yyvsp -= yym;                                                           \n"
"    yym = yylhs[yyn];                                                       \n"
"    if (yystate == 0 && yym == 0)                                           \n"
"    {                                                                       \n"
"                                                                            \n"
"#if YYDEBUG                                                                 \n"
"                                                                            \n"
"        if (yydebug)                                                        \n"
"        {                                                                   \n"
"            printf(\"\%%sdebug: after reduction, shifting from state 0 to \\\n"
"                     state \%%d\\n\", YYPREFIX, YYFINAL);                   \n"
"        }                                                                   \n"
"                                                                            \n"
"#endif                                                                      \n"
"                                                                            \n"
"        yystate = YYFINAL;                                                  \n"
"        *++yyssp = YYFINAL;                                                 \n"
"        *++yyvsp = yyval;                                                   \n"
"        if (yychar < 0)                                                     \n"
"        {                                                                   \n"
"            if ((yychar = yylex()) < 0)                                     \n"
"            {                                                               \n"
"                yychar = 0;                                                 \n"
"            }                                                               \n"
"                                                                            \n"
"#if YYDEBUG                                                                 \n"
"                                                                            \n"
"            if (yydebug)                                                    \n"
"            {                                                               \n"
"                yys = 0;                                                    \n"
"                if (yychar <= YYMAXTOKEN) yys = yyname[yychar];             \n"
"                if (!yys)                                                   \n"
"                {                                                           \n"
"                    yys = \"illegal-symbol\";                               \n"
"                }                                                           \n"
"                printf(\"\%%sdebug: state \%%d, reading \%%d (\%%s)\\n\",   \n"
"                         YYPREFIX, YYFINAL, yychar, yys);                   \n"
"            }                                                               \n"
"                                                                            \n"
"#endif                                                                      \n"
"                                                                            \n"
"        }                                                                   \n"
"        if (yychar == 0) goto yyaccept;                                     \n"
"        goto yyloop;                                                        \n"
"    }                                                                       \n"
"                                                                            \n"
"    if ((yyn = yygindex[yym]) && (yyn += yystate) >= 0 &&                   \n"
"            yyn <= YYTABLESIZE && yycheck[yyn] == yystate)                  \n"
"    {                                                                       \n"
"        yystate = yytable[yyn];                                             \n"
"    }                                                                       \n"
"    else                                                                    \n"
"    {                                                                       \n"
"        yystate = yydgoto[yym];                                             \n"
"    }                                                                       \n"
"                                                                            \n"
"#if YYDEBUG                                                                 \n"
"                                                                            \n"
"    if (yydebug)                                                            \n"
"    {                                                                       \n"
"        printf(\"\%%sdebug: after reduction, shifting from state \%%d     \\\n"
"                 to state \%%d\\n\", YYPREFIX, *yyssp, yystate);            \n"
"    }                                                                       \n"
"                                                                            \n"
"#endif                                                                      \n"
"                                                                            \n"
"    if (yyssp >= yyss + yystacksize - 1)                                    \n"
"    {                                                                       \n"
"        goto yyoverflow;                                                    \n"
"    }                                                                       \n"
"                                                                            \n"
"    *++yyssp = yystate;                                                     \n"
"    *++yyvsp = yyval;                                                       \n"
"    goto yyloop;                                                            \n"
"                                                                            \n"
"yyoverflow:                                                                 \n"
"                                                                            \n"
"    yyerror(\"yacc stack overflow\");                                       \n"
"                                                                            \n"
"yyabort:                                                                    \n"
"                                                                            \n"
"    return (1);                                                             \n"
"                                                                            \n"
"yyaccept:                                                                   \n"
"                                                                            \n"
"    return (0);                                                             \n"
"}                                                                           \n"
"                                                                            \n"
"                                                                            \n"
"YYSTYPE* %s::getLVal()                                                      \n"
"{                                                                           \n"
"    return &yylval;                                                         \n"
"}                                                                           \n"
"                                                                            \n"
;
